{
    "version": 3,
    "terraform_version": "0.11.10",
    "serial": 91,
    "lineage": "31f7bd4e-9f99-f4d5-2d09-6b89d3f13354",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_ssm_document.Hostname_Linux": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "Hostname_Change_Linux",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/Hostname_Change_Linux",
                            "content": "  {\n      \"schemaVersion\":\"2.0\",\n      \"description\":\"Run a Shell script to securely Changing the hostname for Linux instance\",\n      \"mainSteps\":[\n         {\n            \"action\":\"aws:runShellScript\",\n            \"name\":\"runShellScript\",\n            \"inputs\":{\n               \"runCommand\":[\n                  \"sudo su -\",\n                  \"domain=$(aws ssm get-parameters --names /domain/name --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"if realm list |grep $domain; then echo \\\"Host has already joined $domain so exiting\\\"; exit -1; fi;\\n\",\n                  \"instanceId=$(curl http://169.254.169.254/latest/meta-data/instance-id)\\n\",\n                  \"hostname=$(aws ec2 describe-instances --instance-id $instanceId --region ap-south-1 --query 'Reservations[0].Instances[0].Tags[?Key==`hostname`].Value' --output text)\\n\",\n                  \"if [ -z \\\"$hostname\\\" ]; then echo \\\"hostname (case sensitive) tag is not defined so exiting\\\"; exit -1; fi\\n\",\n                  \"echo $hostname.$domain \u003e /etc/hostname\\n\",\n                  \"echo 127.0.0.1 $hostname.$domain $hostname \u003e /etc/hosts\\n\",\n                  \"echo \\\"Hostname has changed and rebooting now\\\"\\n\",\n                  \"reboot\"\n               ]\n            }\n         }\n      ]\n   }\n",
                            "default_version": "4",
                            "description": "Run a Shell script to securely Changing the hostname for Linux instance",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "14084ba8ebd9d12e57d41e005d67b5f79d6d4cf500e23899b22d7f15a773f1cb",
                            "hash_type": "Sha256",
                            "id": "Hostname_Change_Linux",
                            "latest_version": "4",
                            "name": "Hostname_Change_Linux",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "1",
                            "platform_types.0": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_document.Hostname_Ubuntu": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "Hostname_Change_Ubuntu",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/Hostname_Change_Ubuntu",
                            "content": "  {\n   \"schemaVersion\":\"2.0\",\n   \"description\":\"Run a Shell script to securely Changing the hostname for Ubuntu instance\",\n   \"mainSteps\":[\n      {\n         \"action\":\"aws:runShellScript\",\n         \"name\":\"runShellScript\",\n         \"inputs\":{\n            \"runCommand\":[\n               \"sudo su -\",\n               \"domain=$(aws ssm get-parameters --names /domain/name --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n               \"if realm list |grep $domain; then echo \\\"Host has already joined $domain so exiting\\\"; exit -1; fi;\\n\",\n               \"instanceId=$(curl http://169.254.169.254/latest/meta-data/instance-id)\\n\",\n               \"hostname=$(aws ec2 describe-instances --instance-id $instanceId --region ap-south-1 --query 'Reservations[0].Instances[0].Tags[?Key==`hostname`].Value' --output text)\\n\",\n               \"ipv4=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\\n\",\n               \"if [ -z \\\"$hostname\\\" ]; then echo \\\"hostname (case sensitive) tag is not defined so exiting\\\"; exit -1; fi\\n\",\n               \"echo $hostname.$domain \u003e /etc/hostname\\n\",\n               \"echo 127.0.0.1 $hostname.$domain \u003e /etc/hosts\\n\",\n               \"echo \\\"$ipv4 $hostname\\\" \u003e\u003e /etc/hosts\\n\",\n               \"echo \\\"Hostname has changed and rebooting now\\\"\\n\",\n               \"reboot\"\n            ]\n         }\n      }\n   ]\n}\n",
                            "default_version": "3",
                            "description": "Run a Shell script to securely Changing the hostname for Ubuntu instance",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "5785529d1c6b73bfa58d04f55d29c8fb8c6f37c674a9b47e440b4e789bba9105",
                            "hash_type": "Sha256",
                            "id": "Hostname_Change_Ubuntu",
                            "latest_version": "3",
                            "name": "Hostname_Change_Ubuntu",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "1",
                            "platform_types.0": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_document.Hostname_Windows": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "Hostname_Change_Windows",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/Hostname_Change_Windows",
                            "content": "  {\n      \"schemaVersion\":\"2.0\",\n      \"description\":\"Run a Shell script to securely Changing the hostname for Windows instance\",\n      \"mainSteps\":[\n         {\n            \"action\":\"aws:runPowerShellScript\",\n            \"name\":\"runPowerShellScript\",\n            \"inputs\":{\n               \"runCommand\":[\n               \"$currenthostname = hostname\\n\",\n               \"$instanceId = ((Invoke-WebRequest -Uri http://169.254.169.254/latest/meta-data/instance-id -UseBasicParsing).Content)\\n\",\n               \"$newhostname = (aws ec2 describe-instances --instance-id $instanceId --region ap-south-1 --query 'Reservations[0].Instances[0].Tags[?Key==`hostname`].Value' --output text)\\n\",\n               \"Rename-computer –computername \\\"$currenthostname\\\" –newname \\\"$newhostname\\\"\\n\",\n               \"Restart-Computer -Force\"\n               ]\n            }\n         }\n      ]\n   }\n",
                            "default_version": "3",
                            "description": "Run a Shell script to securely Changing the hostname for Windows instance",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "d36c8b3e890cd84e1f3af73c1ef44c3e288809ad54e151934c5ac4a0948b73d0",
                            "hash_type": "Sha256",
                            "id": "Hostname_Change_Windows",
                            "latest_version": "3",
                            "name": "Hostname_Change_Windows",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "2",
                            "platform_types.0": "Windows",
                            "platform_types.1": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_document.linux": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "Ubuntu_Amzlinux_Domain_Join",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/Ubuntu_Amzlinux_Domain_Join",
                            "content": "  {\n      \"schemaVersion\":\"2.0\",\n      \"description\":\"Run a Shell script to securely domain-join a Ubuntu and Amazon Linux instances\",\n      \"mainSteps\":[\n         {\n            \"action\":\"aws:runShellScript\",\n            \"name\":\"runShellScript\",\n            \"inputs\":{\n               \"runCommand\":[\n                  \"domain=$(aws ssm get-parameters --names /domain/name --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"ouPath=$(aws ssm get-parameters --names /domain/ou_path --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"username=$(aws ssm get-parameters --names /domain/username --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"password=$(aws ssm get-parameters --names /domain/password --with-decryption --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"for i in 1 2 3 4 5;\\n\",\n                  \"do\\n\",\n                  \"echo $password | sudo realm join --membership-software=samba -U $username --computer-ou=$ouPath $domain \u0026\u0026 echo \\\"Host has joined domain successfully after $i retries\\\" \u0026\u0026 break;\\n\",\n                  \"done\\n\",\n                  \"if ! sudo realm list |grep $domain; then echo \\\"Host has not joined $domain so exiting\\\"; exit -1; fi;\\n\",\n                  \"sudo su -\\n\",\n                  \"cp /etc/sssd/sssd.conf /etc/sssd/sssd.conf.backup\\n\",\n                  \"echo dyndns_update = true \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo dyndns_refresh_interval = 43200 \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo dyndns_update_ptr = true \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo dyndns_ttl = 3600 \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo Updated sssd.conf, now restarting sssd service\\n\",\n                  \"/bin/systemctl restart sssd.service\\n\",\n                  \"cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup\\n\",\n                  \"sed -i -e 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\\n\",\n                  \"echo Updated sshd_config, now restarting sshd service\\n\",\n                  \"/bin/systemctl restart sshd.service\\n\",\n                  \"echo 'CIOCloudmanagement@corp.mphasis.com ALL=(ALL) ALL' \u003e\u003e /etc/sudoers.d/CIOCloudmanagement\\n\",\n                  \"sudo shutdown -r 1\"\n               ]\n            }\n         }\n      ]\n   }\n",
                            "default_version": "3",
                            "description": "Run a Shell script to securely domain-join a Ubuntu and Amazon Linux instances",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "f76a8e151e6922b9297c6435e7e1c274f089bae1ee4663427797271fc062b75f",
                            "hash_type": "Sha256",
                            "id": "Ubuntu_Amzlinux_Domain_Join",
                            "latest_version": "3",
                            "name": "Ubuntu_Amzlinux_Domain_Join",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "1",
                            "platform_types.0": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_document.redhatlinux": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "RedHat_CentOS_Domain_Join",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/RedHat_CentOS_Domain_Join",
                            "content": "  {\n      \"schemaVersion\":\"2.0\",\n      \"description\":\"Run a Shell script to securely domain-join a RedHat and CentOS instance\",\n      \"mainSteps\":[\n         {\n            \"action\":\"aws:runShellScript\",\n            \"name\":\"runShellScript\",\n            \"inputs\":{\n               \"runCommand\":[\n                  \"domain=$(aws ssm get-parameters --names /domain/name --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"ouPath=$(aws ssm get-parameters --names /domain/ou_path --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"username=$(aws ssm get-parameters --names /domain/username --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"password=$(aws ssm get-parameters --names /domain/password --with-decryption --region ap-south-1 --query 'Parameters[0].Value' --output text)\\n\",\n                  \"for i in 1 2 3 4 5;\\n\",\n                  \"do\\n\",\n                  \"echo $password | sudo realm join --membership-software=adcli -U $username --computer-ou=$ouPath $domain \u0026\u0026 echo \\\"Host has joined domain successfully after $i retries\\\" \u0026\u0026 break;\\n\",\n                  \"done\\n\",\n                  \"if ! sudo realm list |grep $domain; then echo \\\"Host has not joined $domain so exiting\\\"; exit -1; fi;\\n\",\n                  \"sudo su -\\n\",\n                  \"cp /etc/sssd/sssd.conf /etc/sssd/sssd.conf.backup\\n\",\n                  \"echo dyndns_update = true \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo dyndns_refresh_interval = 43200 \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo dyndns_update_ptr = true \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo dyndns_ttl = 3600 \u003e\u003e /etc/sssd/sssd.conf\\n\",\n                  \"echo Updated sssd.conf, now restarting sssd service\\n\",\n                  \"/bin/systemctl restart sssd.service\\n\",\n                  \"cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup\\n\",\n                  \"sed -i -e 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\\n\",\n                  \"echo Updated sshd_config, now restarting sshd service\\n\",\n                  \"/bin/systemctl restart sshd.service\\n\",\n                  \"echo 'CIOCloudmanagement@corp.mphasis.com ALL=(ALL) ALL' \u003e\u003e /etc/sudoers.d/CIOCloudmanagement\\n\",\n                  \"sudo shutdown -r 1\"\n               ]\n            }\n         }\n      ]\n   }\n",
                            "default_version": "3",
                            "description": "Run a Shell script to securely domain-join a RedHat and CentOS instance",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "7ae014009d38638c85b4fc3488e7933783603bf22a3069057b37c8f35cd9d61c",
                            "hash_type": "Sha256",
                            "id": "RedHat_CentOS_Domain_Join",
                            "latest_version": "3",
                            "name": "RedHat_CentOS_Domain_Join",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "1",
                            "platform_types.0": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_document.windows_2012": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "Windows_2012_Domain_Join",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/Windows_2012_Domain_Join",
                            "content": "  {\n      \"schemaVersion\":\"2.0\",\n      \"description\":\"Run a PowerShell script to securely domain-join a Windows instance\",\n      \"mainSteps\":[\n         {\n            \"action\":\"aws:runPowerShellScript\",\n            \"name\":\"runPowerShellWithSecureString\",\n            \"inputs\":{\n               \"runCommand\":[\n                  \"$ipdns = (Get-SSMParameterValue -Name /domain/dns_ip).Parameters[0].Value\\n\",\n                  \"$domain = (Get-SSMParameterValue -Name /domain/name).Parameters[0].Value\\n\",\n                  \"$ouPath = (Get-SSMParameterValue -Name /domain/ou_path).Parameters[0].Value\\n\",\n                  \"$username = (Get-SSMParameterValue -Name /domain/username).Parameters[0].Value\\n\",\n                  \"$domain_username = \\\"$domain\\\\$username\\\"\\n\",\n                  \"$password = (Get-SSMParameterValue -Name /domain/password -WithDecryption $True).Parameters[0].Value | ConvertTo-SecureString -asPlainText -Force\\n\",\n                  \"$credential = New-Object System.Management.Automation.PSCredential($domain_username,$password)\\n\",\n                  \"Set-DnsClientServerAddress \\\"Ethernet 2\\\" -ServerAddresses ($ipdns)\\n\",\n                  \"Add-Computer -DomainName $domain -OUPath \\\"$ouPath\\\" -Credential $credential\\n\",\n                  \"Restart-Computer -Force\"\n               ]\n            }\n         }\n      ]\n   }\n",
                            "default_version": "2",
                            "description": "Run a PowerShell script to securely domain-join a Windows instance",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "43ba3d70d026d250e685066e47ba1cd7141e01083383366f31466132571763a0",
                            "hash_type": "Sha256",
                            "id": "Windows_2012_Domain_Join",
                            "latest_version": "2",
                            "name": "Windows_2012_Domain_Join",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "2",
                            "platform_types.0": "Windows",
                            "platform_types.1": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_document.windows_2016": {
                    "type": "aws_ssm_document",
                    "depends_on": [],
                    "primary": {
                        "id": "Windows_2016_Domain_Join",
                        "attributes": {
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:document/Windows_2016_Domain_Join",
                            "content": "  {\n      \"schemaVersion\":\"2.0\",\n      \"description\":\"Run a PowerShell script to securely domain-join a Windows instance\",\n      \"mainSteps\":[\n         {\n            \"action\":\"aws:runPowerShellScript\",\n            \"name\":\"runPowerShellWithSecureString\",\n            \"inputs\":{\n               \"runCommand\":[\n                  \"$ipdns = (Get-SSMParameterValue -Name /domain/dns_ip).Parameters[0].Value\\n\",\n                  \"$domain = (Get-SSMParameterValue -Name /domain/name).Parameters[0].Value\\n\",\n                  \"$ouPath = (Get-SSMParameterValue -Name /domain/ou_path).Parameters[0].Value\\n\",\n                  \"$username = (Get-SSMParameterValue -Name /domain/username).Parameters[0].Value\\n\",\n                  \"$domain_username = \\\"$domain\\\\$username\\\"\\n\",\n                  \"echo $domain_username\\n\",\n                  \"$password = (Get-SSMParameterValue -Name /domain/password -WithDecryption $True).Parameters[0].Value | ConvertTo-SecureString -asPlainText -Force\\n\",\n                  \"$credential = New-Object System.Management.Automation.PSCredential($domain_username,$password)\\n\",\n                  \"Set-DnsClientServerAddress \\\"Ethernet\\\" -ServerAddresses $ipdns\\n\",\n                  \"Add-Computer -DomainName $domain -OUPath \\\"$ouPath\\\" -Credential $credential\\n\",\n                  \"Restart-Computer -Force\"\n               ]\n            }\n         }\n      ]\n   }\n",
                            "default_version": "2",
                            "description": "Run a PowerShell script to securely domain-join a Windows instance",
                            "document_format": "JSON",
                            "document_type": "Command",
                            "hash": "a4c87c748e9b003d794b2a485c0c13a6351c1edda54474d85bb3152d86afc3bf",
                            "hash_type": "Sha256",
                            "id": "Windows_2016_Domain_Join",
                            "latest_version": "2",
                            "name": "Windows_2016_Domain_Join",
                            "owner": "570193561522",
                            "parameter.#": "1",
                            "permissions.%": "0",
                            "platform_types.#": "2",
                            "platform_types.0": "Windows",
                            "platform_types.1": "Linux",
                            "schema_version": "2.0",
                            "status": "Active",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_parameter.domain_name": {
                    "type": "aws_ssm_parameter",
                    "depends_on": [],
                    "primary": {
                        "id": "/domain/name",
                        "attributes": {
                            "allowed_pattern": "",
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:parameter/domain/name",
                            "description": "Domain name",
                            "id": "/domain/name",
                            "key_id": "",
                            "name": "/domain/name",
                            "overwrite": "true",
                            "tags.%": "0",
                            "type": "String",
                            "value": "corp.mphasis.com"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_parameter.domain_ou_path": {
                    "type": "aws_ssm_parameter",
                    "depends_on": [],
                    "primary": {
                        "id": "/domain/ou_path",
                        "attributes": {
                            "allowed_pattern": "",
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:parameter/domain/ou_path",
                            "description": "Domain OU path",
                            "id": "/domain/ou_path",
                            "key_id": "",
                            "name": "/domain/ou_path",
                            "overwrite": "true",
                            "tags.%": "0",
                            "type": "String",
                            "value": "OU=AWS_Cloud_Servers,OU=Cloud_Servers,DC=corp,DC=mphasis,DC=com"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_parameter.domain_password": {
                    "type": "aws_ssm_parameter",
                    "depends_on": [
                        "data.aws_kms_key.ssm"
                    ],
                    "primary": {
                        "id": "/domain/password",
                        "attributes": {
                            "allowed_pattern": "",
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:parameter/domain/password",
                            "description": "Domain password",
                            "id": "/domain/password",
                            "key_id": "arn:aws:kms:ap-south-1:570193561522:key/f501007d-4e2f-4474-a224-648df3141fc5",
                            "name": "/domain/password",
                            "overwrite": "true",
                            "tags.%": "0",
                            "type": "SecureString",
                            "value": "Eighty@2E"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_parameter.domain_username": {
                    "type": "aws_ssm_parameter",
                    "depends_on": [],
                    "primary": {
                        "id": "/domain/username",
                        "attributes": {
                            "allowed_pattern": "",
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:parameter/domain/username",
                            "description": "Domain username",
                            "id": "/domain/username",
                            "key_id": "",
                            "name": "/domain/username",
                            "overwrite": "true",
                            "tags.%": "0",
                            "type": "String",
                            "value": "anirudh.tensult"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ssm_parameter.ipdns": {
                    "type": "aws_ssm_parameter",
                    "depends_on": [],
                    "primary": {
                        "id": "/domain/dns_ip",
                        "attributes": {
                            "allowed_pattern": "",
                            "arn": "arn:aws:ssm:ap-south-1:570193561522:parameter/domain/dns_ip",
                            "description": "DNS IP Address",
                            "id": "/domain/dns_ip",
                            "key_id": "",
                            "name": "/domain/dns_ip",
                            "overwrite": "true",
                            "tags.%": "0",
                            "type": "String",
                            "value": "172.20.7.31,172.20.7.30"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc_dhcp_options.ad": {
                    "type": "aws_vpc_dhcp_options",
                    "depends_on": [],
                    "primary": {
                        "id": "dopt-06514aa53506a35a3",
                        "attributes": {
                            "domain_name": "corp.mphasis.com",
                            "domain_name_servers.#": "3",
                            "domain_name_servers.0": "172.20.7.31",
                            "domain_name_servers.1": "172.20.7.30",
                            "domain_name_servers.2": "AmazonProvidedDNS",
                            "id": "dopt-06514aa53506a35a3",
                            "tags.%": "1",
                            "tags.Name": "ActiveDirectory"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc_dhcp_options_association.ad": {
                    "type": "aws_vpc_dhcp_options_association",
                    "depends_on": [
                        "aws_vpc_dhcp_options.ad"
                    ],
                    "primary": {
                        "id": "dopt-06514aa53506a35a3-vpc-06d461a68868ed907",
                        "attributes": {
                            "dhcp_options_id": "dopt-06514aa53506a35a3",
                            "id": "dopt-06514aa53506a35a3-vpc-06d461a68868ed907",
                            "vpc_id": "vpc-06d461a68868ed907"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_kms_key.ssm": {
                    "type": "aws_kms_key",
                    "depends_on": [],
                    "primary": {
                        "id": "f501007d-4e2f-4474-a224-648df3141fc5",
                        "attributes": {
                            "arn": "arn:aws:kms:ap-south-1:570193561522:key/f501007d-4e2f-4474-a224-648df3141fc5",
                            "aws_account_id": "570193561522",
                            "creation_date": "2018-10-29T09:19:17Z",
                            "description": "KMS key for SSM",
                            "enabled": "true",
                            "expiration_model": "",
                            "id": "f501007d-4e2f-4474-a224-648df3141fc5",
                            "key_id": "alias/ssm-key",
                            "key_manager": "CUSTOMER",
                            "key_state": "Enabled",
                            "key_usage": "ENCRYPT_DECRYPT",
                            "origin": "AWS_KMS"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        }
    ]
}
